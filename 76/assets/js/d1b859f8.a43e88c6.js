"use strict";(self.webpackChunkso=self.webpackChunkso||[]).push([[440],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>y});var a=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(t),u=i,y=m["".concat(c,".").concat(u)]||m[u]||h[u]||o;return t?a.createElement(y,r(r({ref:n},p),{},{components:t})):a.createElement(y,r({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[m]="string"==typeof e?e:i,r[1]=s;for(var l=2;l<o;l++)r[l]=t[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6689:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=t(8168),i=(t(6540),t(5680));const o={},r="The X Window System",s={unversionedId:"Application Interaction/Lab 12 - Application Interaction/The X Window System/x-window-system",id:"Application Interaction/Lab 12 - Application Interaction/The X Window System/x-window-system",title:"The X Window System",description:"Unix-like systems that support a Graphical User Interface usually do this through the X Window System.",source:"@site/docs/Application Interaction/Lab 12 - Application Interaction/The X Window System/x-window-system.md",sourceDirName:"Application Interaction/Lab 12 - Application Interaction/The X Window System",slug:"/Application Interaction/Lab 12 - Application Interaction/The X Window System/x-window-system",permalink:"/operating-systems/76/Application Interaction/Lab 12 - Application Interaction/The X Window System/x-window-system",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"The X Window System",permalink:"/operating-systems/76/Application Interaction/Lab 12 - Application Interaction/The X Window System/"},next:{title:"Drills",permalink:"/operating-systems/76/Application Interaction/Lab 12 - Application Interaction/The X Window System/Drills/"}},c={},l=[{value:"X Client and Server on the Same Machine",id:"x-client-and-server-on-the-same-machine",level:2},{value:"Oneko",id:"oneko",level:2}],p={toc:l},m="wrapper";function h(e){let{components:n,...o}=e;return(0,i.yg)(m,(0,a.A)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"the-x-window-system"},"The X Window System"),(0,i.yg)("p",null,"Unix-like systems that support a Graphical User Interface usually do this through the X Window System.\nThis system is implemented with a client-server model: the X Server is the component that controls the screen, keyboard, mouse, and other parts related to the GUI, while the X clients are the applications that want to use the graphical interface (like, for example, an internet browser)."),(0,i.yg)("p",null,"The clients and the server communicate using a standardized protocol, and the system does not necessarily require the client and server to be on the same machine.\nAlthough not so common nowadays, the X client can run on a different machine than the server, with the communication happening over the network.\nBut in the more usual case, when both the client and the server are on the same machine, modern implementations of the X Window System use a faster communication channel, like a Unix socket."),(0,i.yg)("h2",{id:"x-client-and-server-on-the-same-machine"},"X Client and Server on the Same Machine"),(0,i.yg)("p",null,"Let's investigate the case when both the X client and X server run on the same machine.\nFirst we'll take a look at the Unix sockets that are in listening mode."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"student@os:~$ sudo netstat -xnlp | grep X11\nunix  2      [ ACC ]     STREAM     LISTENING     29120    3472/Xorg            @/tmp/.X11-unix/X0\nunix  2      [ ACC ]     STREAM     LISTENING     29121    3472/Xorg            /tmp/.X11-unix/X0\n")),(0,i.yg)("p",null,"We observe the ",(0,i.yg)("inlineCode",{parentName:"p"},"Xorg")," process (the X server) listening on a Unix socket with the path ",(0,i.yg)("inlineCode",{parentName:"p"},"/tmp/.X11-unix/X0"),"."),(0,i.yg)("p",null,"Now let's run an X client (that is, a GUI application) and check that it will indeed connect to this Unix socket.\nA very simple example is the ",(0,i.yg)("inlineCode",{parentName:"p"},"xeyes")," application:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},'student@os:~$ strace -e trace=socket,connect xeyes\nsocket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC, 0) = 3\nconnect(3, {sa_family=AF_UNIX, sun_path=@"/tmp/.X11-unix/X0"}, 20) = 0\n')),(0,i.yg)("p",null,"As expected, the application creates a Unix socket, then connects to the path ",(0,i.yg)("inlineCode",{parentName:"p"},'@"/tmp/.X11-unix/X0"'),"."),(0,i.yg)("p",null,"Furthermore, let's confirm that there is actual communication taking place between ",(0,i.yg)("inlineCode",{parentName:"p"},"xeyes")," and the X server.\nWe'll run ",(0,i.yg)("inlineCode",{parentName:"p"},"xeyes")," again, and then we'll keep moving the mouse cursor around.\nWhen the mouse is moved, the following events are taking place:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"The X server captures the mouse movements (since the server is the one that controls the mouse)"),(0,i.yg)("li",{parentName:"ul"},'The X server will pass these "mouse moved" events to the clients (including xeyes)'),(0,i.yg)("li",{parentName:"ul"},"The client (xeyes) uses these events to update its window (changing the position of the pupils inside the eyes)")),(0,i.yg)("p",null,"So, if we run ",(0,i.yg)("inlineCode",{parentName:"p"},"xeyes")," under ",(0,i.yg)("inlineCode",{parentName:"p"},"strace"),", we expect to see some communication on the Unix socket that is created at the beginning:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"strace -e 'trace=!poll' -e trace='socket,connect,recvmsg' xeyes |& grep -v '\\-1 EAGAIN'\n")),(0,i.yg)("p",null,(0,i.yg)("img",{alt:"strace-xeyes",src:t(5973).A,width:"1920",height:"1080"})),(0,i.yg)("h2",{id:"oneko"},"Oneko"),(0,i.yg)("p",null,"An alternative to ",(0,i.yg)("inlineCode",{parentName:"p"},"xeyes")," which allows us to observe Unix sockets is ",(0,i.yg)("inlineCode",{parentName:"p"},"oneko"),".\nGoing through the same steps, we see that the application also create a Unix socket, then connects to the path ",(0,i.yg)("inlineCode",{parentName:"p"},'@"/tmp/.X11-unix/X0"'),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},'student@os:~$ strace -e trace=socket,connect oneko\nsocket(AF_UNIX, SOCK_STREAM|SOCK_CLOEXEC, 0) = 3\nconnect(3, {sa_family=AF_UNIX, sun_path=@"/tmp/.X11-unix/X1"}, 20) = 0\n--- SIGALRM {si_signo=SIGALRM, si_code=SI_KERNEL} ---\n')),(0,i.yg)("p",null,"When running ",(0,i.yg)("inlineCode",{parentName:"p"},"oneko"),", what differs from ",(0,i.yg)("inlineCode",{parentName:"p"},"xeyes")," is the ",(0,i.yg)("inlineCode",{parentName:"p"},"SIGALRM")," signal.\nThis means that ",(0,i.yg)("inlineCode",{parentName:"p"},"oneko")," uses a timer, which is periodically set, and then it expires only to be reset again.\nThe purpose of this timer is to slow down the cat."),(0,i.yg)("p",null,"Verifying the communication between the X server and ",(0,i.yg)("inlineCode",{parentName:"p"},"oneko")," is easy.\nWe see that the cat follows our mouse cursor, behaving similarly to ",(0,i.yg)("inlineCode",{parentName:"p"},"xeyes"),".\nAfter running ",(0,i.yg)("inlineCode",{parentName:"p"},"oneko")," under ",(0,i.yg)("inlineCode",{parentName:"p"},"strace"),", we see the communication uses the UNIX socket created at the beginning:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-console"},"strace -e 'trace=!poll' -e trace='socket,connect,recvmsg' oneko |& grep -v '\\-1 EAGAIN'\n")),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"/operating-systems/76/Application%20Interaction/Lab%2012%20-%20Application%20Interaction/The%20X%20Window%20System/Drills/Questions/timer"},"Quiz")))}h.isMDXComponent=!0},5973:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/strace_xeyes-f055c379e7028e39de13f0d039171718.gif"}}]);