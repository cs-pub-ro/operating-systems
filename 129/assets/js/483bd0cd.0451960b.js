"use strict";(self.webpackChunkso=self.webpackChunkso||[]).push([[6877],{5680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>d});var a=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),u=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return a.createElement(p.Provider,{value:n},e.children)},m="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=u(t),c=r,d=m["".concat(p,".").concat(c)]||m[c]||y[c]||i;return t?a.createElement(d,l(l({ref:n},s),{},{components:t})):a.createElement(d,l({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=c;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4315:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=t(8168),r=(t(6540),t(5680));const i={},l="Similarities Between the TCBs of `libult` and Unikraft",o={unversionedId:"Compute/Questions/tcb-libult-unikraft",id:"Compute/Questions/tcb-libult-unikraft",title:"Similarities Between the TCBs of `libult` and Unikraft",description:"Question Text",source:"@site/docs/Compute/Questions/tcb-libult-unikraft.md",sourceDirName:"Compute/Questions",slug:"/Compute/Questions/tcb-libult-unikraft",permalink:"/operating-systems/129/Compute/Questions/tcb-libult-unikraft",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"ULT Thread IDs",permalink:"/operating-systems/129/Compute/Questions/ult-thread-ids"},next:{title:"Time Slice Value",permalink:"/operating-systems/129/Compute/Questions/time-slice-value"}},p={},u=[{value:"Question Text",id:"question-text",level:2},{value:"Question Answers",id:"question-answers",level:2},{value:"Feedback",id:"feedback",level:2}],s={toc:u},m="wrapper";function y(e){let{components:n,...t}=e;return(0,r.yg)(m,(0,a.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"similarities-between-the-tcbs-of-libult-and-unikraft"},"Similarities Between the TCBs of ",(0,r.yg)("inlineCode",{parentName:"h1"},"libult")," and Unikraft"),(0,r.yg)("h2",{id:"question-text"},"Question Text"),(0,r.yg)("p",null,"Which members of the TCBs in ",(0,r.yg)("inlineCode",{parentName:"p"},"libult")," and Unikraft have similar meanings?"),(0,r.yg)("h2",{id:"question-answers"},"Question Answers"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"start_routine")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"entry"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"id")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"name"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"context.uc_stack")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"stack"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"arguments")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"flags"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"has_dynamic_stack")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"detached")))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"argument")," and ",(0,r.yg)("inlineCode",{parentName:"li"},"arg"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"context")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"sched"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"context")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"tls")))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"context")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"ctx"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"return_value")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"prv")))),(0,r.yg)("h2",{id:"feedback"},"Feedback"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"start_routine")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"entry")," are the functions that run in the newly created threads.\n",(0,r.yg)("inlineCode",{parentName:"p"},"context.uc_stack")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"stack")," are pointers to the stack of the newly created threads.\n",(0,r.yg)("inlineCode",{parentName:"p"},"argument")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"arg")," are pointers to the arguments of ",(0,r.yg)("inlineCode",{parentName:"p"},"start_routine")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"entry"),", respectively.\n",(0,r.yg)("inlineCode",{parentName:"p"},"context")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"ctx")," are the contexts in which the new threads run.\n",(0,r.yg)("inlineCode",{parentName:"p"},"return_value")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"prv")," are both pointers to the values returned by the thread functions."))}y.isMDXComponent=!0}}]);