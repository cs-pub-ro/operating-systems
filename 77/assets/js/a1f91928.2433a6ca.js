"use strict";(self.webpackChunkso=self.webpackChunkso||[]).push([[3746],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(n),y=a,d=c["".concat(s,".").concat(y)]||c[y]||u[y]||o;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var m=2;m<o;m++)l[m]=n[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},2651:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var r=n(8168),a=(n(6540),n(5680));const o={},l="Malloc `mmap()`",i={unversionedId:"Data/Process Memory/Process Memory/questions/malloc-mmap",id:"Data/Process Memory/Process Memory/questions/malloc-mmap",title:"Malloc `mmap()`",description:"Question Text",source:"@site/docs/Data/Process Memory/Process Memory/questions/malloc-mmap.md",sourceDirName:"Data/Process Memory/Process Memory/questions",slug:"/Data/Process Memory/Process Memory/questions/malloc-mmap",permalink:"/operating-systems/77/Data/Process Memory/Process Memory/questions/malloc-mmap",draft:!1,tags:[],version:"current",frontMatter:{}},s={},m=[{value:"Question Text",id:"question-text",level:2},{value:"Question Answers",id:"question-answers",level:2},{value:"Feedback",id:"feedback",level:2}],p={toc:m},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"malloc-mmap"},"Malloc ",(0,a.yg)("inlineCode",{parentName:"h1"},"mmap()")),(0,a.yg)("h2",{id:"question-text"},"Question Text"),(0,a.yg)("p",null,"When does ",(0,a.yg)("inlineCode",{parentName:"p"},"malloc()")," use ",(0,a.yg)("inlineCode",{parentName:"p"},"mmap()"),"?"),(0,a.yg)("h2",{id:"question-answers"},"Question Answers"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"When it allocates read-only memory")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"When it allocates zeroed memory"))),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"When it allocates chunks of memory bigger than an internal threshold")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"When the heap is full")),(0,a.yg)("h2",{id:"feedback"},"Feedback"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"malloc")," uses both ",(0,a.yg)("inlineCode",{parentName:"p"},"brk()")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"mmap()"),", but prefers ",(0,a.yg)("inlineCode",{parentName:"p"},"mmap()")," for big chunks of memory (by default larger than 128 KB).\nThis value can be altered using ",(0,a.yg)("a",{parentName:"p",href:"https://linux.die.net/man/3/mallopt"},(0,a.yg)("inlineCode",{parentName:"a"},"mallopt()"))," with the ",(0,a.yg)("inlineCode",{parentName:"p"},"param")," argument set to ",(0,a.yg)("inlineCode",{parentName:"p"},"M_MMAP_THRESHOLD"),".\nThese memroy blocks are unlikely to be reused so they are not placed on heap to avoid memory fragmentation."))}u.isMDXComponent=!0}}]);