"use strict";(self.webpackChunkso=self.webpackChunkso||[]).push([[7630],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(n),g=r,y=u["".concat(c,".").concat(g)]||u[g]||d[g]||s;return n?a.createElement(y,i(i({ref:t},p),{},{components:n})):a.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=g;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var l=2;l<s;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8906:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=n(8168),r=(n(6540),n(5680));const s={},i=void 0,o={unversionedId:"Data/Data arena/Arena/Drills/Tasks/Access Counter/README",id:"Data/Data arena/Arena/Drills/Tasks/Access Counter/README",title:"README",description:"Access Counter",source:"@site/docs/Data/Data arena/Arena/Drills/Tasks/Access Counter/README.md",sourceDirName:"Data/Data arena/Arena/Drills/Tasks/Access Counter",slug:"/Data/Data arena/Arena/Drills/Tasks/Access Counter/",permalink:"/operating-systems/77/Data/Data arena/Arena/Drills/Tasks/Access Counter/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"README",permalink:"/operating-systems/77/Data/Data arena/Arena/Drills/Tasks/Exec Shellcode/"},next:{title:"README",permalink:"/operating-systems/77/Data/Data arena/Arena/Drills/Tasks/Reference Counting/"}},c={},l=[{value:"Access Counter",id:"access-counter",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"access-counter"},"Access Counter"),(0,r.yg)("p",null,"Navigate to the ",(0,r.yg)("inlineCode",{parentName:"p"},"support/access-counter/")," directory."),(0,r.yg)("p",null,"Your goal is to update the ",(0,r.yg)("inlineCode",{parentName:"p"},"src/access_counter.c")," source code file to capture memory access exceptions (i.e. the ",(0,r.yg)("inlineCode",{parentName:"p"},"SIGSEGV")," signal) and to update page permissions in order for the access to eventually succeed.\nUse ",(0,r.yg)("inlineCode",{parentName:"p"},"mprotect")," to update the protection of the pages in stages: read, write and then exec.\nEach time an update is made, the ",(0,r.yg)("inlineCode",{parentName:"p"},"counter")," variable is increased;\nthis is used for testing."),(0,r.yg)("p",null,"The signal handler is already in place as the ",(0,r.yg)("inlineCode",{parentName:"p"},"access_handler()")," function.\nIt is called any time a ",(0,r.yg)("inlineCode",{parentName:"p"},"SIGSEGV")," signal is being sent out to the current process.\nYou will update the handler by following the ",(0,r.yg)("inlineCode",{parentName:"p"},"TODO")," comments and instructions here."),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"pages")," array stores information about accessed pages.\nAssume the ",(0,r.yg)("inlineCode",{parentName:"p"},"MAX_PAGES")," size of the array is enough to store information.\nWhen an existing page is accessed and causes a memory exception, the permission is update, in the stages mentioned above: read, write, and then exec.\nWhen a new page is accessed, a new entry is filled in the ",(0,r.yg)("inlineCode",{parentName:"p"},"pages")," array, initialized with read protection.\nUse ",(0,r.yg)("inlineCode",{parentName:"p"},"mmap()")," to reserve virtual pages.\nUse anonymous mapping (i.e. the ",(0,r.yg)("inlineCode",{parentName:"p"},"MAP_ANONYMOUS"),") flag.\nUse any permissions required."),(0,r.yg)("p",null,"To test it, enter the ",(0,r.yg)("inlineCode",{parentName:"p"},"tests/")," directory and run:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-console"},"make check\n")),(0,r.yg)("p",null,"In case of a correct solution, you will get an output such as:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"./run_all_tests.sh\ntest_acess_read                  ........................ passed ...   9\ntest_acess_write                 ........................ passed ...   9\ntest_acess_exec                  ........................ passed ...  10\ntest_acess_read_write            ........................ passed ...  12\ntest_acess_read_exec             ........................ passed ...  12\ntest_acess_write_exec            ........................ passed ...  12\ntest_acess_exec_read             ........................ passed ...  12\ntest_acess_exec_write            ........................ passed ...  12\ntest_acess_write_read            ........................ passed ...  12\n\nTotal:                                                           100/100\n")),(0,r.yg)("p",null,"If you're having difficulties solving this exercise, go through ",(0,r.yg)("a",{parentName:"p",href:"/operating-systems/77/Data/Data%20arena/Arena/"},"this")," reading material."))}d.isMDXComponent=!0}}]);