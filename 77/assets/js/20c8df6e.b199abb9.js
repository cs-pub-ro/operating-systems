"use strict";(self.webpackChunkso=self.webpackChunkso||[]).push([[6881],{5680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>d});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(n),g=o,d=m["".concat(p,".").concat(g)]||m[g]||y[g]||a;return n?r.createElement(d,i(i({ref:t},l),{},{components:n})):r.createElement(d,i({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9160:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>y,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(8168),o=(n(6540),n(5680));const a={},i="Memory Protection",s={unversionedId:"Data/Working With Memory/Working with Memory/tasks/memory-protection/README",id:"Data/Working With Memory/Working with Memory/tasks/memory-protection/README",title:"Memory Protection",description:"Memory contents (both code and data) are separated into sections or zones.",source:"@site/docs/Data/Working With Memory/Working with Memory/tasks/memory-protection/README.md",sourceDirName:"Data/Working With Memory/Working with Memory/tasks/memory-protection",slug:"/Data/Working With Memory/Working with Memory/tasks/memory-protection/",permalink:"/operating-systems/77/Data/Working With Memory/Working with Memory/tasks/memory-protection/",draft:!1,tags:[],version:"current",frontMatter:{}},p={},c=[{value:"Practice",id:"practice",level:2}],l={toc:c},m="wrapper";function y(e){let{components:t,...n}=e;return(0,o.yg)(m,(0,r.A)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"memory-protection"},"Memory Protection"),(0,o.yg)("p",null,"Memory contents (both code and data) are separated into sections or zones.\nThis makes it easier to manage.\nMore than that, it allows different zones to have different permissions.\nThis follows the ",(0,o.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Principle_of_least_privilege"},"principle of least privilege")," where only required permissions are part of a given section."),(0,o.yg)("p",null,"Code is usually placed in a section (",(0,o.yg)("inlineCode",{parentName:"p"},".text"),") with read and execute permissions;\nno write permissions.\nVariables are placed in different sections (",(0,o.yg)("inlineCode",{parentName:"p"},".data"),", ",(0,o.yg)("inlineCode",{parentName:"p"},".bss"),", stack, heap) with read and write permissions;\nno execute permissions."),(0,o.yg)("p",null,"Let's navigate to the ",(0,o.yg)("inlineCode",{parentName:"p"},"memory-protection/support/")," directory and inspect the ",(0,o.yg)("inlineCode",{parentName:"p"},"mem_prot.c")," source file.\nThe file uses different access types for the ",(0,o.yg)("inlineCode",{parentName:"p"},"data")," variable and the ",(0,o.yg)("inlineCode",{parentName:"p"},"do_nothing")," function."),(0,o.yg)("p",null,"Build it:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-console"},"student@os:~/.../memory-protection/support/$ make\ngcc -g -Wall -Wextra -Werror -I../../../../../common/makefile/../utils -I../../../../../common/makefile/../utils/log  -c -o mem_prot.o mem_prot.c\ngcc mem_prot.o ../../../../../common/makefile/../utils/log/log.o  -o mem_prot\n\nstudent@os:~/.../memory-protection/support/$ ./mem_prot\nreading from .data section\nwriting to .data section\nreading from .text section\nexecuting .text section\n")),(0,o.yg)("p",null,"All current actions in the program are valid."),(0,o.yg)("p",null,"Let's uncomment each commented line in the program and try again:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-console"},"student@os:~/.../memory-protection/support/$ ./mem_prot\nreading from .data section\nwriting to .data section\nreading from .text section\nexecuting .text section\nexecuting .data section\nSegmentation fault (core dumped)\n")),(0,o.yg)("p",null,"We now receive the dreaded ",(0,o.yg)("em",{parentName:"p"},"Segmentation fault")," message when we try to access a memory section with wrong permissions."),(0,o.yg)("p",null,"Permissions come into play when we control the memory address via pointers.\nBut even for programming languages that don't offer pointers (such as Python) issues may still arise."),(0,o.yg)("p",null,"In the ",(0,o.yg)("inlineCode",{parentName:"p"},"str.py")," file, we look to modify ",(0,o.yg)("inlineCode",{parentName:"p"},"str[1]"),", but this fails:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-console"},"student@os:~/.../memory-protection/support/$ ./str.py\nn, 110, n\nTraceback (most recent call last):\n  File \"./str.py\", line 5, in <module>\n    str[1] = 'z'\nTypeError: 'str' object does not support item assignment\n")),(0,o.yg)("p",null,"This fails because strings are, in Python, immutable.\nOnce a string is being created, it can not be modified;\nyou have to create a new string."),(0,o.yg)("h2",{id:"practice"},"Practice"),(0,o.yg)("p",null,"Go to the ",(0,o.yg)("inlineCode",{parentName:"p"},"memory-protection/support/")," folder and solve the practice items below."),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Add a variable named ",(0,o.yg)("inlineCode",{parentName:"p"},"ro")," that you define as ",(0,o.yg)("inlineCode",{parentName:"p"},"const"),".\nThe variable will be placed on a read-only section (",(0,o.yg)("inlineCode",{parentName:"p"},".rodata"),") such as that write and execution access would result in ",(0,o.yg)("em",{parentName:"p"},"Segmentation fault"),"."),(0,o.yg)("p",{parentName:"li"},"Access the ",(0,o.yg)("inlineCode",{parentName:"p"},"ro")," variable and show that, indeed, for write and execution access, ",(0,o.yg)("em",{parentName:"p"},"Segmentation fault")," is issued."))))}y.isMDXComponent=!0}}]);