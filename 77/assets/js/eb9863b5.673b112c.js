"use strict";(self.webpackChunkso=self.webpackChunkso||[]).push([[7587],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>y});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=o,y=m["".concat(p,".").concat(u)]||m[u]||g[u]||a;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8271:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(8168),o=(n(6540),n(5680));const a={},i="App Investigation: Servo",s={unversionedId:"Data/Lab 4 - Investigate Memory/Guides/App Investigation Servo/README",id:"Data/Lab 4 - Investigate Memory/Guides/App Investigation Servo/README",title:"App Investigation: Servo",description:"Servo is a browser engine written in Rust that provides reusable components to implement web standards.",source:"@site/docs/Data/Lab 4 - Investigate Memory/Guides/App Investigation Servo/README.md",sourceDirName:"Data/Lab 4 - Investigate Memory/Guides/App Investigation Servo",slug:"/Data/Lab 4 - Investigate Memory/Guides/App Investigation Servo/",permalink:"/operating-systems/77/Data/Lab 4 - Investigate Memory/Guides/App Investigation Servo/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"App Investigation: Deluge",permalink:"/operating-systems/77/Data/Lab 4 - Investigate Memory/Guides/App Investigation Deluge/"},next:{title:"Investigation: Allocator in the D Programming Language",permalink:"/operating-systems/77/Data/Lab 4 - Investigate Memory/Guides/D allocator/"}},p={},l=[{value:"Practice",id:"practice",level:3}],c={toc:l},m="wrapper";function g(e){let{components:t,...n}=e;return(0,o.yg)(m,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"app-investigation-servo"},"App Investigation: Servo"),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://servo.org/"},"Servo")," is a browser engine written in Rust that provides reusable components to implement web standards."),(0,o.yg)("p",null,"We do not clone the repository, since it's very large."),(0,o.yg)("p",null,"We find information about allocator used, by accessing the ",(0,o.yg)("inlineCode",{parentName:"p"},"components/allocator/")," in ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/servo/servo/tree/master/components/allocator"},"its source code"),".\nIn ",(0,o.yg)("inlineCode",{parentName:"p"},"Cargo.toml")," we see that it requires ",(0,o.yg)("inlineCode",{parentName:"p"},"jemalloc")," for non-Windows implementations and the standard Windows API (called ",(0,o.yg)("inlineCode",{parentName:"p"},"heapapi"),") for Windows:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-text"},'[...]\n[lib]\npath = "lib.rs"\n\n[target.\'cfg(not(windows))\'.dependencies]\njemalloc-sys = { version = "0.3.2" }\n\n[target.\'cfg(windows)\'.dependencies]\nwinapi = { version = "0.3", features = ["heapapi"] }\nust: https://github.com/servo/servo\n')),(0,o.yg)("p",null,"In ",(0,o.yg)("inlineCode",{parentName:"p"},"lib.rs"),", in ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/servo/servo/blob/master/components/allocator/lib.rs#L70"},(0,o.yg)("inlineCode",{parentName:"a"},"GlobalAlloc:alloc()"))," we see it is using ",(0,o.yg)("a",{parentName:"p",href:"https://jemalloc.net/jemalloc.3.html"},"the ",(0,o.yg)("inlineCode",{parentName:"a"},"mallocx")," custom function from ",(0,o.yg)("inlineCode",{parentName:"a"},"jemalloc()")),".\nSee ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/servo/servo/blob/master/components/allocator/lib.rs#L17"},"the initialization of ",(0,o.yg)("inlineCode",{parentName:"a"},"ffi")),"."),(0,o.yg)("p",null,"See the use of the allocator in the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/servo/servo/blob/master/components/net/Cargo.toml"},(0,o.yg)("inlineCode",{parentName:"a"},"Cargo.toml")," file in the ",(0,o.yg)("inlineCode",{parentName:"a"},"net")," component"),".\nSearch for the ",(0,o.yg)("inlineCode",{parentName:"p"},"alloc")," string."),(0,o.yg)("h3",{id:"practice"},"Practice"),(0,o.yg)("p",null,"Look for uses of the allocator in other components of Servo."))}g.isMDXComponent=!0}}]);