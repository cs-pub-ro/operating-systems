"use strict";(self.webpackChunkso=self.webpackChunkso||[]).push([[3339],{5680:(e,r,t)=>{t.d(r,{xA:()=>p,yg:()=>g});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),y=c(t),u=a,g=y["".concat(s,".").concat(u)]||y[u]||m[u]||o;return t?n.createElement(g,i(i({ref:r},p),{},{components:t})):n.createElement(g,i({ref:r},p))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[y]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8696:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=t(8168),a=(t(6540),t(5680));const o={},i="Allocating and Deallocating Memory",l={unversionedId:"Data/Process Memory/Process Memory/tasks/alloc-size/README",id:"Data/Process Memory/Process Memory/tasks/alloc-size/README",title:"Allocating and Deallocating Memory",description:"Practice",source:"@site/docs/Data/Process Memory/Process Memory/tasks/alloc-size/README.md",sourceDirName:"Data/Process Memory/Process Memory/tasks/alloc-size",slug:"/Data/Process Memory/Process Memory/tasks/alloc-size/",permalink:"/operating-systems/77/Data/Process Memory/Process Memory/tasks/alloc-size/",draft:!1,tags:[],version:"current",frontMatter:{}},s={},c=[{value:"Practice",id:"practice",level:2}],p={toc:c},y="wrapper";function m(e){let{components:r,...t}=e;return(0,a.yg)(y,(0,n.A)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"allocating-and-deallocating-memory"},"Allocating and Deallocating Memory"),(0,a.yg)("h2",{id:"practice"},"Practice"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Use ",(0,a.yg)("inlineCode",{parentName:"p"},"pmap")," to analyze the process address space for ",(0,a.yg)("inlineCode",{parentName:"p"},"ALLOC_SIZE_KB")," initialized to ",(0,a.yg)("inlineCode",{parentName:"p"},"256"),".\nNotice the new memory areas and the difference between the use of ",(0,a.yg)("inlineCode",{parentName:"p"},"mmap")," syscall and ",(0,a.yg)("inlineCode",{parentName:"p"},"brk")," syscall.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Use ",(0,a.yg)("inlineCode",{parentName:"p"},"valgrind")," on the resulting executable, and notice there are memory leaks.\nThey are quite obvious due to the lack of proper freeing.\nSolve the leaks.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Use ",(0,a.yg)("inlineCode",{parentName:"p"},"valgrind")," on different executables in the system (in ",(0,a.yg)("inlineCode",{parentName:"p"},"/bin/"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"/usr/bin/"),") and see if they have memory leaks."))),(0,a.yg)("p",null,"If you're having difficulties solving this exercise, go through ",(0,a.yg)("a",{parentName:"p",href:"../../../reading/process-memory.md"},"this")," reading material."))}m.isMDXComponent=!0}}]);