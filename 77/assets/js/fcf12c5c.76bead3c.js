"use strict";(self.webpackChunkso=self.webpackChunkso||[]).push([[2196],{5680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>g});var a=t(6540);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=a.createContext({}),l=function(e){var r=a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return a.createElement(i.Provider,{value:r},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),y=l(t),u=n,g=y["".concat(i,".").concat(u)]||y[u]||m[u]||o;return t?a.createElement(g,s(s({ref:r},c),{},{components:t})):a.createElement(g,s({ref:r},c))}));function g(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=u;var p={};for(var i in r)hasOwnProperty.call(r,i)&&(p[i]=r[i]);p.originalType=e,p[y]="string"==typeof e?e:n,s[1]=p;for(var l=2;l<o;l++)s[l]=t[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1742:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var a=t(8168),n=(t(6540),t(5680));const o={},s=void 0,p={unversionedId:"Data/Lab 3 - Memory/Process Memory/Drills/Tasks/Page Mapper/README",id:"Data/Lab 3 - Memory/Process Memory/Drills/Tasks/Page Mapper/README",title:"README",description:"Page Mapper",source:"@site/docs/Data/Lab 3 - Memory/Process Memory/Drills/Tasks/Page Mapper/README.md",sourceDirName:"Data/Lab 3 - Memory/Process Memory/Drills/Tasks/Page Mapper",slug:"/Data/Lab 3 - Memory/Process Memory/Drills/Tasks/Page Mapper/",permalink:"/operating-systems/77/Data/Lab 3 - Memory/Process Memory/Drills/Tasks/Page Mapper/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Memory Layout of Statically-Linked and Dynamically-Linked Executables",permalink:"/operating-systems/77/Data/Lab 3 - Memory/Process Memory/Drills/Tasks/Static Dinamic/"},next:{title:"Operator overloading",permalink:"/operating-systems/77/Data/Lab 3 - Memory/Process Memory/Drills/Tasks/Reference Counting/"}},i={},l=[{value:"Page Mapper",id:"page-mapper",level:2}],c={toc:l},y="wrapper";function m(e){let{components:r,...t}=e;return(0,n.yg)(y,(0,a.A)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h2",{id:"page-mapper"},"Page Mapper"),(0,n.yg)("p",null,"Navigate to the ",(0,n.yg)("inlineCode",{parentName:"p"},"drills/tasks/support/page-mapper/")," directory."),(0,n.yg)("p",null,"Your goal is to update the ",(0,n.yg)("inlineCode",{parentName:"p"},"src/page_mapper.c")," source code file to reserve virtual pages in the address space of the current process.\nUse ",(0,n.yg)("inlineCode",{parentName:"p"},"mmap()")," to reserve virtual pages.\nUse anonymous mapping (i.e. the ",(0,n.yg)("inlineCode",{parentName:"p"},"MAP_ANONYMOUS"),") flag.\nUse any permissions required."),(0,n.yg)("p",null,"Inside the ",(0,n.yg)("inlineCode",{parentName:"p"},"src/")," directory, use ",(0,n.yg)("inlineCode",{parentName:"p"},"make")," to do a quick check of the implementation.\nTo test it, enter the ",(0,n.yg)("inlineCode",{parentName:"p"},"tests/")," directory and run:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-console"},"make check\n")),(0,n.yg)("p",null,"In case of a correct solution, you will get an output such as:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-text"},"./run_all_tests.sh\ntest_res_1                       ........................ passed ...  25\ntest_res_2                       ........................ passed ...  25\ntest_res_10                      ........................ passed ...  25\ntest_res_10_res_20               ........................ passed ...  25\n\nTotal:                                                           100/100\n")),(0,n.yg)("p",null,"If you're having difficulties solving this exercise, go through ",(0,n.yg)("a",{parentName:"p",href:"/operating-systems/77/Data/Lab%203%20-%20Memory/Process%20Memory/Reading/process-memory"},"this")," reading material."))}m.isMDXComponent=!0}}]);