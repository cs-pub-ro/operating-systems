"use strict";(self.webpackChunkso=self.webpackChunkso||[]).push([[4888],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>d});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},f="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=u(n),y=a,d=f["".concat(p,".").concat(y)]||f[y]||s[y]||o;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=y;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[f]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},6700:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(8168),a=(n(6540),n(5680));const o={},i="Buffer Overflow Info Leak",l={unversionedId:"Data/Lab 5 - Memory Security/guides/buffer-overflow-leak/README",id:"Data/Lab 5 - Memory Security/guides/buffer-overflow-leak/README",title:"Buffer Overflow Info Leak",description:"Since arrays decay to pointers in C, the same effect may be obtained by using them.",source:"@site/docs/Data/Lab 5 - Memory Security/guides/buffer-overflow-leak/README.md",sourceDirName:"Data/Lab 5 - Memory Security/guides/buffer-overflow-leak",slug:"/Data/Lab 5 - Memory Security/guides/buffer-overflow-leak/",permalink:"/operating-systems/77/Data/Lab 5 - Memory Security/guides/buffer-overflow-leak/",draft:!1,tags:[],version:"current",frontMatter:{}},p={},u=[{value:"Practice",id:"practice",level:2}],c={toc:u},f="wrapper";function s(e){let{components:t,...n}=e;return(0,a.yg)(f,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"buffer-overflow-info-leak"},"Buffer Overflow Info Leak"),(0,a.yg)("p",null,"Since arrays decay to pointers in C, the same effect may be obtained by using them."),(0,a.yg)("p",null,"Navigate to the ",(0,a.yg)("inlineCode",{parentName:"p"},"guide/buffer-overflow-leak/")," directory.\nOpen and analyze the ",(0,a.yg)("inlineCode",{parentName:"p"},"array_leak.c")," file."),(0,a.yg)("p",null,"Compile and run the program.\nCan you extract any information from the output?\nCan you identify the return address of the main function?"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Note:")," You can use ",(0,a.yg)("inlineCode",{parentName:"p"},"objdump -d -M intel array_leak")," to check the stack layout.\n",(0,a.yg)("strong",{parentName:"p"},"Note:")," Depending on the environment the layout may differ."),(0,a.yg)("p",null,"Next, open and analyze the ",(0,a.yg)("inlineCode",{parentName:"p"},"string_leak.c")," file.\nCompile and run the program.\nTo better understand the output, use ",(0,a.yg)("inlineCode",{parentName:"p"},"xxd")," to interpret the output as hexadecimal bytes:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-console"},"student@os:~/.../guides/buffer-overflow-leak/$ ./string_leak | xxd\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Note:")," ",(0,a.yg)("inlineCode",{parentName:"p"},"73")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"6f")," are the ascii values of ",(0,a.yg)("inlineCode",{parentName:"p"},"s")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"o")),(0,a.yg)("h2",{id:"practice"},"Practice"),(0,a.yg)("p",null,"In file ",(0,a.yg)("inlineCode",{parentName:"p"},"string_leak.c")," replace the usage of ",(0,a.yg)("inlineCode",{parentName:"p"},"memcpy")," with ",(0,a.yg)("inlineCode",{parentName:"p"},"strcpy"),".\nDo not modify anything else (including the size of the buffer).\nAs the name suggests, ",(0,a.yg)("inlineCode",{parentName:"p"},"strcpy()")," is specialized for string copies, therefore we don need to specify how much we want to copy.\nWhat is the result?\nIs the result correct?\nExplain the result."))}s.isMDXComponent=!0}}]);